program    = define*

define     = "int" ident (func | type_suffix ";")
func       = "(" params? ")" block
params     = "int" ("*")* ident ("," params)*
block      = "{" stmt* "}"

stmt       = expr ";"
             | block
             | "return" expr ";"
             | "if" "(" expr ")" stmt ("else" stmt)?
             | "while" "(" expr ")" stmt
             | "for" "(" expr? ";" expr? ";" expr? ")" stmt
             | "int" ("*")* ident type_suffix ";"
type_suffix= ( ("[" num "]") type_suffix )?

expr       = assign
assign     = equality ("=" assign)?
equality   = relational ("==" relational | "!=" relational)*
relational = add ("<" add | "<=" add | ">" add | ">=" add)*
add        = mul ("+" mul | "-" mul)*
mul        = unary ("*" unary | "/" unary)*
unary      = "sizeof" unary
             | ("+" | "-")? primary
             | ("*" | "&") unary
primary    = ident ("(" args? ")" | idx_access)? | "(" expr ")" | num
args       = expr ("," args)*
idx_access = "[" expr "]" idx_access*
